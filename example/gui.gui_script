local dirtylarry = require "dirtylarry.dirtylarry"
local log = require("example.log")

function print_to_log(result, permission)
    if result == permissions.PERMISSION_DENIED then
        -- You can directly ask for the permission.
        print(permission .. " PERMISSION_DENIED")
    elseif result == permissions.PERMISSION_GRANTED then
        -- You can use the API that requires the permission.
        print(permission .. " PERMISSION_GRANTED")
    elseif result == permissions.PERMISSION_SHOW_RATIONALE then
        -- In an educational UI, explain to the user why your app requires this
        -- permission for a specific feature to behave as expected, and what
        -- features are disabled if it's declined. In this UI, include a
        -- "cancel" or "no thanks" button that lets the user continue
        -- using your app without granting the permission.
        print(permission .. " PERMISSION_SHOW_RATIONALE")
    end
end

local function request(permissions_table)
    print("Request: ")
    for k, value in pairs(permissions_table) do
        print(value)
    end
    permissions.request(permissions_table,
    function(self, result)
        print("Result:")
        for permission, result in pairs(result) do
            print_to_log(result, permission)
        end
    end)
end

function init(self)
    if permissions then
        log.print_all_sdk_ent()
        local permission = "android.permission.ACCESS_NETWORK_STATE"
        local result = permissions.check(permission)
        print("Check:")
        print_to_log(result, permission)

        permission = "android.permission.POST_NOTIFICATIONS"
        result = permissions.check(permission)
        print_to_log(result, permission)

        request({"android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.READ_CONTACTS"})
        msg.post(".", "acquire_input_focus")
    end
end

function update(self)
    log.update(gui.get_node("text"))
end

function on_input(self, action_id, action)
    if action_id then
		dirtylarry:button("open_notifications_settings", action_id, action, function()
			permissions.open_notifications_settings()
		end)
    end
end