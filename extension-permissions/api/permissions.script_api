- name: permissions
  type: table
  desc: Functions and constants for interacting with permissions related APIs

  members:

#*****************************************************************************************************

  - name: check
    type: function
    desc: Determine whether you have been granted a particular permission.

    parameters:
      - name: permission
        type: string
        desc: A constant that represent permission, for example `android.permission.ACCESS_NETWORK_STATE`

    returns:
      - name: result
        type: number
        desc: A result can be one of the predefined constants below

            - `permissions.PERMISSION_GRANTED`

            - `permissions.PERMISSION_DENIED`

            - `permissions.PERMISSION_SHOW_RATIONALE`

    examples:
      - desc: |-
              ```lua
              local result = permissions.check("android.permission.ACCESS_NETWORK_STATE")
              if result == permissions.PERMISSION_DENIED then
                  -- You can directly ask for the permission.
              elseif result == permissions.PERMISSION_GRANTED then
                  -- You can use the API that requires the permission.
              elseif result == permissions.PERMISSION_SHOW_RATIONALE then
                  -- In an educational UI, explain to the user why your app requires this
                  -- permission for a specific feature to behave as expected, and what
                  -- features are disabled if it's declined. In this UI, include a
                  -- "cancel" or "no thanks" button that lets the user continue
                  -- using your app without granting the permission.
              end

              ```

#*****************************************************************************************************

  - name: request
    type: function
    desc: Requests permissions to be granted to this application.

    parameters:
      - name: request_tbl
        type: table
        desc: An array with constants that represent permissions.

      - name: callback
        type: function
        desc: A callback taking the following parameters
        parameters:
          - name: self
            type: object
            desc: The calling script

          - name: result
            type: table
            desc: A table where key is permission string and key is one of the following constants
                
                  - `permissions.PERMISSION_GRANTED`

                  - `permissions.PERMISSION_DENIED`

    examples:
      - desc: |-
            ```lua
            local permissions_table = {"android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.READ_CONTACTS"}
            permissions.request(permissions_table,
                function(self, result)
                    for permission, result in pairs(result) do
                      if result == permissions.PERMISSION_DENIED then
                          -- You can directly ask for the permission.
                      elseif result == permissions.PERMISSION_GRANTED then
                          -- You can use the API that requires the permission.
                      elseif result == permissions.PERMISSION_SHOW_RATIONALE then
                          -- In an educational UI, explain to the user why your app requires this
                          -- permission for a specific feature to behave as expected, and what
                          -- features are disabled if it's declined. In this UI, include a
                          -- "cancel" or "no thanks" button that lets the user continue
                          -- using your app without granting the permission.
                      end
                    end
                end)
            ```

#*****************************************************************************************************

  - name: PERMISSION_GRANTED
    type: number
    desc: The permission has been granted to the given package.

  - name: PERMISSION_DENIED
    type: number
    desc: The permission has not been granted to the given package.

  - name: PERMISSION_SHOW_RATIONALE
    type: number
    desc: Explain why your app needs the permission [Android doc](https://developer.android.com/training/permissions/requesting#explain)

#*****************************************************************************************************
